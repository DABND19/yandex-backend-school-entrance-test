"""Added expiration date column

Revision ID: aaa57a8173f0
Revises: 092e8ff77823
Create Date: 2022-06-19 19:48:55.304404

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy import sql
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision = 'aaa57a8173f0'
down_revision = '092e8ff77823'
branch_labels = None
depends_on = None


def data_upgrade() -> None:
    shop_unit_import = sql.table('shop_unit_import', 
        sql.column('id', postgresql.UUID),
        sql.column('date', sa.DateTime),
        sql.column('expiration_date', sa.DateTime)
    )
    cte = sql.select(
        shop_unit_import.c.id,
        shop_unit_import.c.date,
        sql.func.row_number().over(
            partition_by=[shop_unit_import.c.id],
            order_by=[shop_unit_import.c.date],
            range_=(None, None)
        ).label('row_num')
    ).cte()
    next_import = sql.alias(cte)
    import_periods = sql.select(
        cte.c.id,
        cte.c.date,
        next_import.c.date.label('expiration_date')
    ).join_from(
        cte,
        next_import,
        sql.and_(
            cte.c.id == next_import.c.id,
            cte.c.row_num + 1 == next_import.c.row_num
        )
    ).subquery()
    q = sql.update(shop_unit_import).values(
        expiration_date=import_periods.c.expiration_date
    ).where(
        shop_unit_import.c.id == import_periods.c.id,
        shop_unit_import.c.date == import_periods.c.date
    )
    op.execute(q)


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        'shop_unit_import', sa.Column('expiration_date', sa.DateTime(), nullable=True)
    )
    op.create_check_constraint(
        op.f('ck_shop_unit_import_expiration_date_validation'), 'shop_unit_import',
        'expiration_date IS NULL OR expiration_date > date'
    )
    op.create_unique_constraint(
        op.f('uq_shop_unit_import_id'), 'shop_unit_import', ['id', 'expiration_date']
    )
    op.create_foreign_key(
        op.f('fk_shop_unit_import_id_shop_unit_import'), 'shop_unit_import', 'shop_unit_import', 
        ['id', 'expiration_date'], ['id', 'date'], onupdate='CASCADE', ondelete='SET NULL'
    )
    data_upgrade()
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('fk_shop_unit_import_id_shop_unit_import'),
                       'shop_unit_import', type_='foreignkey')
    op.drop_constraint(op.f('uq_shop_unit_import_id'),
                       'shop_unit_import', type_='unique')
    op.drop_constraint(op.f('ck_shop_unit_import_expiration_date_validation'), 
                       'shop_unit_import', type_='check')
    op.drop_column('shop_unit_import', 'expiration_date')
    # ### end Alembic commands ###
